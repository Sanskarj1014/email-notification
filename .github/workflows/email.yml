name: SonarQube Scan

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  sonarQubeScan:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for SonarQube to analyze all history

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Setup SonarQube Scanner
        run: |
          mkdir -p $HOME/sonar
          curl -sSLo $HOME/sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip -o $HOME/sonar/sonar-scanner.zip -d $HOME/sonar/

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $HOME/sonar/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner \
            -Dsonar.projectKey=sanskar-test \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonar.atg.galaxysofttech.co.in \
            -Dsonar.token=$SONAR_TOKEN

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
            project: "MyProject"
            format: "ALL"
            out: "reports"

            # Trivy
      - name: Install Trivy
        run: |
            sudo apt-get update
            sudo apt-get install wget apt-transport-https gnupg lsb-release -y
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy -y

      - name: Trivy FS Scan
        run: trivy fs . > trivyfs.txt


      # Upload all reports
      - name: Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
            name: scan-reports
            path: |
                reports
                trivyfs.txt
                trivyimage.txt
  email-job:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
 
    - name: Run a dummy job
      run: echo "Simulating job..."
 
    - name: Send Email Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_APP_PASSWORD }}
        subject: GitHub Actions Build Notification
        to: sanskar.jain@galaxyweblinks.in
        from: ${{ secrets.EMAIL_USERNAME }}
        body: |
          âœ… Build completed!
 
          ðŸ”¹ Repository: ${{ github.repository }}
          ðŸ”¹ Branch: ${{ github.ref_name }}
          ðŸ”¹ Workflow: ${{ github.workflow }}
          ðŸ”¹ Run ID: ${{ github.run_id }}
          ðŸ”¹ Run URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
 
        attachments: |
          ./trivyfs.txt
          ./trivyimage.txt